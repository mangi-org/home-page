worker_processes 1;

events {
    worker_connections 1024;
}

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;
http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format quic '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for" "$http3"';

    access_log /var/log/nginx/access.log quic;

    sendfile on;
    tcp_nopush on;

    keepalive_timeout 65;

    # security, reveal less information about ourselves
    server_tokens off; # disables emitting nginx version in error messages and in the “Server” response header field
    more_clear_headers 'Server';
    more_clear_headers 'X-Powered-By';

    # prevent clickjacking attacks
    more_set_headers 'X-Frame-Options: SAMEORIGIN';

    # help to prevent cross-site scripting exploits
    more_set_headers 'X-XSS-Protection: 1; mode=block';

    # help to prevent Cross-Site Scripting (XSS) and data injection attacks
    # https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP
    more_set_headers "Content-Security-Policy: object-src 'none'; frame-ancestors 'self'; form-action 'self'; block-all-mixed-content; sandbox allow-forms allow-same-origin allow-scripts allow-popups allow-downloads; base-uri 'self';";

    # enable response compression
    gzip on;
    gzip_vary on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_proxied any;
    gzip_comp_level 6;
    brotli on;
    brotli_static on;

    # server {
    #     listen 80 default_server;
    #     listen [::]:80 default_server;
    #     location / {
    #         return 301 https://$host$request_uri/;
    #     }
    # }

    server {
        listen 80;
        listen 443 quic reuseport;
        listen 443 ssl;
        http2 on;
        server_name localhost; # customize to match your domain
        ssl_certificate /etc/nginx/ssl/cert.crt;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        # curl https://ssl-config.mozilla.org/ffdhe2048.txt > /path/to/dhparam.pem
        ssl_dhparam /etc/ssl/dhparam.pem;


        ssl_session_timeout 1d;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_early_data on;
        ssl_session_cache shared:MozSSL:10m; # about 40000 sessions
        ssl_session_tickets on;
        ssl_prefer_server_ciphers on;
        # OCSP stapling
        ssl_stapling on;
        ssl_stapling_verify on;


        add_header alt-svc 'h3=":443"; ma=86400';
        add_header QUIC-Status $http3;
        add_header Strict-Transport-Security "max-age=31536000" always;
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-Content-Type-Options nosniff;

        # location ~* \.(?:jpg|jpeg|gif|png|ico|svg)$ {
        #     expires 30d;
        #     add_header Cache-Control "public, max-age=2592000";
        #     try_files $uri =404;
        # }

        location ~* ^/_next/image {
            proxy_pass http://frontend:3000;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }


        location / {
            proxy_pass http://frontend:3000/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location ~ /(admin|api) {
            proxy_pass http://backend:8000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}